/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BaseExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseExchange__factory>;
    getContractFactory(
      name: "BaseNFT1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseNFT1155__factory>;
    getContractFactory(
      name: "BaseNFT721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseNFT721__factory>;
    getContractFactory(
      name: "DividendPayingERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DividendPayingERC20__factory>;
    getContractFactory(
      name: "ERC1155Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Initializable__factory>;
    getContractFactory(
      name: "ERC20Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Initializable__factory>;
    getContractFactory(
      name: "ERC721Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Initializable__factory>;
    getContractFactory(
      name: "NFT1155ContractURIdentifiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT1155ContractURIdentifiable__factory>;
    getContractFactory(
      name: "NFT721ContractURIdentifiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT721ContractURIdentifiable__factory>;
    getContractFactory(
      name: "NFTLockable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTLockable__factory>;
    getContractFactory(
      name: "NFTStaticCallProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTStaticCallProxy__factory>;
    getContractFactory(
      name: "OwnableInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableInitializable__factory>;
    getContractFactory(
      name: "ERC1155ExchangeV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155ExchangeV0__factory>;
    getContractFactory(
      name: "ERC721ExchangeV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ExchangeV0__factory>;
    getContractFactory(
      name: "IBaseExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseExchange__factory>;
    getContractFactory(
      name: "IBaseNFT1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseNFT1155__factory>;
    getContractFactory(
      name: "IBaseNFT721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseNFT721__factory>;
    getContractFactory(
      name: "IDividendPayingERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDividendPayingERC20__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC20Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Snapshot__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "INFT1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFT1155__factory>;
    getContractFactory(
      name: "INFT1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFT1155Metadata__factory>;
    getContractFactory(
      name: "INFT721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFT721__factory>;
    getContractFactory(
      name: "INFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFT__factory>;
    getContractFactory(
      name: "INFTContractURIdentifiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTContractURIdentifiable__factory>;
    getContractFactory(
      name: "INFTLockable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTLockable__factory>;
    getContractFactory(
      name: "INFTStaticCallProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTStaticCallProxy__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IPaymentSplitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPaymentSplitter__factory>;
    getContractFactory(
      name: "IPaymentSplitterFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPaymentSplitterFactory__factory>;
    getContractFactory(
      name: "ISocialToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISocialToken__factory>;
    getContractFactory(
      name: "IStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStrategy__factory>;
    getContractFactory(
      name: "ITokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenFactory__factory>;
    getContractFactory(
      name: "TokenHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenHelper__factory>;
    getContractFactory(
      name: "ERC1155Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Mock__factory>;
    getContractFactory(
      name: "ERC1155RoyaltyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155RoyaltyMock__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "ERC721Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Mock__factory>;
    getContractFactory(
      name: "ERC721RoyaltyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RoyaltyMock__factory>;
    getContractFactory(
      name: "StaticCallMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticCallMock__factory>;
    getContractFactory(
      name: "NFT1155V0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT1155V0__factory>;
    getContractFactory(
      name: "NFT1155V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT1155V1__factory>;
    getContractFactory(
      name: "NFT1155V2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT1155V2__factory>;
    getContractFactory(
      name: "NFT1155V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT1155V3__factory>;
    getContractFactory(
      name: "NFT721V0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT721V0__factory>;
    getContractFactory(
      name: "NFT721V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT721V1__factory>;
    getContractFactory(
      name: "NFT721V2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT721V2__factory>;
    getContractFactory(
      name: "PaymentSplitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentSplitter__factory>;
    getContractFactory(
      name: "PaymentSplitterFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentSplitterFactory__factory>;
    getContractFactory(
      name: "SocialTokenV0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialTokenV0__factory>;
    getContractFactory(
      name: "DutchAuction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DutchAuction__factory>;
    getContractFactory(
      name: "EnglishAuction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnglishAuction__factory>;
    getContractFactory(
      name: "FixedPriceSale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPriceSale__factory>;
    getContractFactory(
      name: "TokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenFactory__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
